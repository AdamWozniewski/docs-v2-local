{
  "openapi": "3.1.0",
  "info": {
    "contact": {
      "name": "Auth0 Engineering",
      "url": "https://auth0.com/support"
    },
    "title": "Docs Backend API",
    "description": "Backend API for Auth0 documentation system - provides access to tenant management, client configuration, and resource server management",
    "version": "1.0.0",
    "license": {
      "name": "ISC"
    }
  },
  "servers": [
    {
      "url": "http://localhost:7200",
      "description": "Development server"
    }
  ],
  "security": [
    {
      "Auth0Session": []
    }
  ],
  "tags": [
    {
      "name": "health",
      "description": "Health check and service monitoring endpoints"
    },
    {
      "name": "auth",
      "description": "Authentication and authorization endpoints"
    },
    {
      "name": "tenants",
      "description": "Auth0 tenant management operations"
    },
    {
      "name": "clients",
      "description": "Auth0 application/client management operations"
    },
    {
      "name": "resource-servers",
      "description": "Auth0 API/resource server management operations"
    },
    {
      "name": "users",
      "description": "User information and authentication status endpoints"
    }
  ],
  "paths": {
    "/health/alive": {
      "get": {
        "operationId": "getHealthAlive",
        "summary": "Health check alive endpoint",
        "description": "Returns the alive status of the service, indicating the service is running",
        "tags": [
          "health"
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/get-health-alive"
          },
          "500": {
            "$ref": "#/components/responses/internal-server-error"
          }
        }
      }
    },
    "/health/ready": {
      "get": {
        "operationId": "getHealthReady",
        "summary": "Health check ready endpoint",
        "description": "Returns the readiness status of the service, indicating all dependencies are available",
        "tags": [
          "health"
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/get-health-ready"
          },
          "500": {
            "$ref": "#/components/responses/internal-server-error"
          },
          "503": {
            "description": "Service Unavailable - One or more dependencies are not ready",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/health-check-ready-report"
                }
              }
            }
          }
        }
      }
    },
    "/docs/v2/auth/user/login": {
      "get": {
        "operationId": "userLogin",
        "summary": "Initiate user login",
        "description": "Redirects to Auth0 universal login page for user authentication",
        "tags": [
          "auth"
        ],
        "parameters": [
          {
            "name": "returnTo",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "URL to redirect to after successful authentication"
          }
        ],
        "responses": {
          "302": {
            "description": "Redirect to Auth0 login page"
          }
        }
      }
    },
    "/docs/v2/auth/user/callback": {
      "get": {
        "operationId": "userCallback",
        "summary": "User login callback",
        "description": "Handles the callback from Auth0 after user authentication",
        "tags": [
          "auth"
        ],
        "parameters": [
          {
            "name": "code",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Authorization code from Auth0"
          },
          {
            "name": "state",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "State parameter for CSRF protection"
          },
          {
            "name": "error",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Error code if authentication failed"
          }
        ],
        "responses": {
          "302": {
            "description": "Redirect to tenant login or application after processing callback"
          },
          "400": {
            "description": "Bad request - invalid callback parameters"
          }
        }
      }
    },
    "/docs/v2/auth/tenant/login": {
      "get": {
        "operationId": "tenantLogin",
        "summary": "Initiate tenant login",
        "description": "Initiates tenant-specific authentication flow for accessing Auth0 Management API",
        "tags": [
          "auth"
        ],
        "parameters": [
          {
            "name": "returnTo",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "URL to redirect to after successful tenant authentication"
          },
          {
            "name": "tenant",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Specific tenant to authenticate with"
          }
        ],
        "responses": {
          "302": {
            "description": "Redirect to Auth0 tenant authorization page or user login if not authenticated"
          }
        }
      }
    },
    "/docs/v2/auth/tenant/callback": {
      "get": {
        "operationId": "tenantCallback",
        "summary": "Tenant login callback",
        "description": "Handles the callback from Auth0 after tenant authentication and sets up Management API access",
        "tags": [
          "auth"
        ],
        "parameters": [
          {
            "name": "code",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Authorization code from Auth0"
          },
          {
            "name": "state",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "State parameter for CSRF protection"
          },
          {
            "name": "error",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Error code if authentication failed"
          }
        ],
        "responses": {
          "302": {
            "description": "Redirect to application after processing tenant callback"
          },
          "400": {
            "description": "Bad request - invalid callback parameters"
          }
        }
      }
    },
    "/docs/v2/auth/user/logout": {
      "get": {
        "operationId": "userLogout",
        "summary": "Initiate user logout",
        "description": "Starts the logout process by redirecting to Auth0 logout endpoint",
        "tags": [
          "auth"
        ],
        "parameters": [
          {
            "name": "returnTo",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "URL to redirect to after logout"
          }
        ],
        "responses": {
          "302": {
            "description": "Redirect to Auth0 logout endpoint"
          }
        }
      }
    },
    "/docs/v2/auth/user/logout-callback": {
      "get": {
        "operationId": "userLogoutCallback",
        "summary": "User logout callback",
        "description": "Handles the callback from Auth0 after logout and cleans up session",
        "tags": [
          "auth"
        ],
        "responses": {
          "302": {
            "description": "Redirect to application home page after logout"
          }
        }
      }
    },
    "/docs/v2/auth/user/backchannel-logout": {
      "post": {
        "operationId": "userBackchannelLogout",
        "summary": "Handle backchannel logout",
        "description": "Handles backchannel logout requests from Auth0 to invalidate user sessions",
        "tags": [
          "auth"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "logout_token": {
                    "type": "string",
                    "description": "JWT logout token from Auth0"
                  }
                },
                "required": [
                  "logout_token"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Logout processed successfully"
          },
          "400": {
            "description": "Bad request - invalid logout token"
          }
        }
      }
    },
    "/docs/v2/tenants": {
      "get": {
        "operationId": "getTenants",
        "summary": "Get user tenants",
        "description": "Retrieves all tenants associated with the authenticated user",
        "tags": [
          "tenants"
        ],
        "responses": {
          "200": {
            "description": "List of user tenants",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/tenant"
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/unauthenticated"
          },
          "404": {
            "$ref": "#/components/responses/not-found"
          },
          "500": {
            "$ref": "#/components/responses/internal-server-error"
          }
        }
      }
    },
    "/docs/v2/tenants/{tenantName}": {
      "get": {
        "operationId": "getTenant",
        "summary": "Get user tenant",
        "description": "Retrieve a tenant from its name and environment",
        "tags": [
          "tenants"
        ],
        "parameters": [
          {
            "name": "tenantName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The name of the tenant"
          },
          {
            "name": "environment",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The environment of the tenant"
          }
        ],
        "responses": {
          "200": {
            "description": "The tenant object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/tenant"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/unauthenticated"
          },
          "404": {
            "$ref": "#/components/responses/not-found"
          },
          "500": {
            "$ref": "#/components/responses/internal-server-error"
          }
        }
      }
    },
    "/docs/v2/clients": {
      "get": {
        "operationId": "getClients",
        "summary": "Get Auth0 clients",
        "description": "Retrieves a paginated list of Auth0 clients with their configuration details",
        "tags": [
          "clients"
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "default": 0
            },
            "description": "Page number for pagination (zero-based)"
          },
          {
            "name": "per_page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100,
              "default": 100
            },
            "description": "Number of results per page (1-100)"
          }
        ],
        "responses": {
          "200": {
            "description": "List of Auth0 clients",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/client"
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/unauthenticated"
          },
          "404": {
            "$ref": "#/components/responses/not-found"
          },
          "500": {
            "$ref": "#/components/responses/internal-server-error"
          }
        }
      },
      "post": {
        "operationId": "createClient",
        "summary": "Create Auth0 client",
        "description": "Creates a new Auth0 client with the provided configuration details",
        "tags": [
          "clients"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/create-client"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Client successfully created.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/client"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/bad-request"
          },
          "401": {
            "$ref": "#/components/responses/unauthenticated"
          },
          "500": {
            "$ref": "#/components/responses/internal-server-error"
          }
        }
      }
    },
    "/docs/v2/clients/{client_id}": {
      "patch": {
        "operationId": "patchClient",
        "summary": "Update Auth0 client configuration",
        "description": "Updates the configuration details of a specific Auth0 client.",
        "tags": [
          "clients"
        ],
        "parameters": [
          {
            "name": "client_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The unique identifier of the Auth0 client to update."
          }
        ],
        "requestBody": {
          "description": "Client configuration fields to update",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/client-update"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Updated Auth0 client",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/client"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/bad-request"
          },
          "401": {
            "$ref": "#/components/responses/unauthenticated"
          },
          "403": {
            "$ref": "#/components/responses/insufficient-scope"
          },
          "404": {
            "$ref": "#/components/responses/not-found"
          },
          "409": {
            "$ref": "#/components/responses/conflict"
          },
          "429": {
            "$ref": "#/components/responses/too-many-requests"
          },
          "500": {
            "$ref": "#/components/responses/internal-server-error"
          }
        }
      }
    },
    "/docs/v2/resource-servers": {
      "get": {
        "operationId": "getResourceServers",
        "summary": "Get Auth0 resource servers",
        "description": "Retrieves a paginated list of Auth0 resource servers (APIs) with their configuration details",
        "tags": [
          "resource-servers"
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "default": 0
            },
            "description": "Page number for pagination (zero-based)"
          },
          {
            "name": "per_page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100,
              "default": 100
            },
            "description": "Number of results per page (1-100)"
          }
        ],
        "responses": {
          "200": {
            "description": "List of Auth0 resource servers",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/resource-server"
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/unauthenticated"
          },
          "404": {
            "$ref": "#/components/responses/not-found"
          },
          "500": {
            "$ref": "#/components/responses/internal-server-error"
          }
        }
      },
      "post": {
        "operationId": "postResourceServers",
        "summary": "Create Auth0 resource servers",
        "description": "Creates a new Auth0 resource server (API) with the provided configuration details.",
        "tags": [
          "resource-servers"
        ],
        "requestBody": {
          "description": "Resource server configuration",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/resource-server-create"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Resource server created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/resource-server"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/bad-request"
          },
          "401": {
            "$ref": "#/components/responses/unauthenticated"
          },
          "500": {
            "$ref": "#/components/responses/internal-server-error"
          }
        }
      }
    },
    "/docs/v2/users/current": {
      "get": {
        "operationId": "getCurrentUser",
        "summary": "Get current user information",
        "description": "Retrieves the current user's authentication status and associated data. Returns placeholder values when not authenticated, and populated values when authenticated.",
        "tags": [
          "users"
        ],
        "responses": {
          "200": {
            "description": "Current user information",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/user-current"
                }
              }
            }
          },
          "500": {
            "$ref": "#/components/responses/internal-server-error"
          }
        }
      }
    },
    "/docs/v2/users/session": {
      "patch": {
        "operationId": "patchUserSession",
        "summary": "Update user session data",
        "description": "Updates the user's session with selected client and API identifiers.",
        "tags": [
          "users"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/update-user-session-data"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User session updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Session updated"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/bad-request"
          },
          "401": {
            "$ref": "#/components/responses/unauthenticated"
          },
          "500": {
            "$ref": "#/components/responses/internal-server-error"
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "Auth0Session": {
        "type": "apiKey",
        "in": "cookie",
        "name": "session",
        "description": "Auth0 session cookie for authentication"
      }
    },
    "schemas": {
      "health-check-alive-report": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string"
          },
          "build": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string"
              },
              "version": {
                "type": "string"
              }
            },
            "required": [
              "name",
              "version"
            ]
          },
          "runtime": {
            "type": "object",
            "properties": {
              "hostname": {
                "type": "string"
              },
              "pid": {
                "type": "number"
              }
            },
            "required": [
              "hostname",
              "pid"
            ]
          }
        },
        "required": [
          "build",
          "runtime"
        ]
      },
      "health-check-ready-report": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string"
          },
          "build": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string"
              },
              "version": {
                "type": "string"
              }
            },
            "required": [
              "name",
              "version"
            ]
          },
          "runtime": {
            "type": "object",
            "properties": {
              "hostname": {
                "type": "string"
              },
              "pid": {
                "type": "number"
              }
            },
            "required": [
              "hostname",
              "pid"
            ]
          },
          "dependencies": {
            "type": "object",
            "patternProperties": {
              "^S_": {
                "type": "object",
                "properties": {
                  "status": {
                    "type": "string"
                  },
                  "error": {
                    "type": "string"
                  }
                },
                "required": [
                  "status"
                ]
              }
            }
          }
        },
        "required": [
          "build",
          "runtime",
          "dependencies"
        ]
      },
      "tenant": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Display name of the tenant"
          },
          "login_url": {
            "type": "string",
            "format": "uri",
            "description": "Login URL for the tenant"
          },
          "override_subdomain": {
            "type": "string",
            "description": "Optional override subdomain for the tenant"
          },
          "access_token": {
            "type": "string",
            "description": "Optional access token for the tenant"
          },
          "environment": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "description": "Environment ID"
              },
              "apex": {
                "type": "string",
                "description": "Environment apex domain"
              },
              "short_name": {
                "type": "string",
                "description": "Environment short name"
              },
              "tag": {
                "type": "string",
                "enum": [
                  "development",
                  "staging",
                  "production"
                ],
                "description": "Environment tag"
              },
              "enabled": {
                "type": "boolean",
                "description": "Whether the environment is enabled"
              },
              "aliases": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Environment aliases"
              }
            },
            "required": [
              "id",
              "apex",
              "short_name",
              "enabled",
              "aliases"
            ],
            "additionalProperties": false
          }
        },
        "required": [
          "name",
          "login_url",
          "environment"
        ],
        "additionalProperties": true
      },
      "client": {
        "type": "object",
        "properties": {
          "tenant": {
            "type": "string",
            "description": "Tenant domain this client belongs to"
          },
          "name": {
            "type": "string",
            "description": "Name of the Auth0 application"
          },
          "client_id": {
            "type": "string",
            "description": "Unique identifier for the Auth0 application"
          },
          "client_secret": {
            "type": "string",
            "description": "Secret key for the Auth0 application"
          },
          "callbacks": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri"
            },
            "description": "Allowed callback URLs for this application"
          }
        },
        "required": [
          "tenant",
          "name",
          "client_id"
        ],
        "additionalProperties": true
      },
      "create-client": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Name of the Auth0 application"
          }
        },
        "required": [
          "name"
        ],
        "additionalProperties": true
      },
      "client-update": {
        "title": "ClientUpdate",
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "The name of the client."
          },
          "app_type": {
            "type": "string",
            "description": "The type of the client application."
          },
          "callbacks": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri"
            },
            "description": "Allowed callback URLs for the client."
          },
          "logo_uri": {
            "type": "string",
            "format": "uri",
            "description": "URL of the logo for the client."
          },
          "description": {
            "type": "string",
            "description": "A description of the client."
          }
        },
        "additionalProperties": false
      },
      "resource-server": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier for the resource server"
          },
          "name": {
            "type": "string",
            "description": "Display name of the resource server"
          },
          "identifier": {
            "type": "string",
            "description": "Unique identifier/audience for the API"
          }
        },
        "required": [
          "id",
          "name",
          "identifier"
        ],
        "additionalProperties": false
      },
      "resource-server-create": {
        "title": "ResourceServerCreate",
        "type": "object",
        "required": [
          "name",
          "identifier"
        ],
        "properties": {
          "name": {
            "type": "string",
            "description": "The name of the resource server."
          },
          "identifier": {
            "type": "string",
            "description": "The unique identifier for the resource server (often a URI)."
          },
          "scopes": {
            "type": "array",
            "description": "Array of scopes supported by this resource server.",
            "items": {
              "type": "object",
              "properties": {
                "value": {
                  "type": "string",
                  "description": "The scope value."
                },
                "description": {
                  "type": "string",
                  "description": "A description of the scope."
                }
              },
              "required": [
                "value"
              ]
            }
          },
          "signing_alg": {
            "type": "string",
            "description": "The algorithm used to sign tokens."
          },
          "token_lifetime": {
            "type": "integer",
            "description": "The lifetime of the token in seconds."
          }
        }
      },
      "user-current": {
        "type": "object",
        "properties": {
          "is_authenticated": {
            "type": "boolean",
            "description": "Whether the user is currently authenticated"
          },
          "account": {
            "type": "object",
            "properties": {
              "user_name": {
                "type": "string",
                "description": "The authenticated user's name"
              },
              "app_name": {
                "type": "string",
                "description": "The application name from the selected client"
              },
              "tenant": {
                "type": "string",
                "description": "The tenant name"
              },
              "namespace": {
                "type": "string",
                "description": "The tenant domain/namespace"
              },
              "client_id": {
                "type": "string",
                "description": "The selected client ID"
              },
              "client_secret": {
                "type": "string",
                "description": "The selected client secret"
              },
              "callback": {
                "type": "string",
                "description": "The callback URL for the selected client"
              }
            },
            "required": [
              "user_name",
              "app_name",
              "tenant",
              "namespace",
              "client_id",
              "client_secret",
              "callback"
            ],
            "additionalProperties": false
          },
          "connection_name": {
            "type": "string",
            "description": "The connection name being used"
          },
          "api_identifier": {
            "type": "string",
            "description": "The selected API identifier"
          },
          "manage_url": {
            "type": "string",
            "format": "uri",
            "description": "The Auth0 management dashboard URL"
          },
          "user_resources": {
            "type": "object",
            "properties": {
              "selected_client_id": {
                "type": "string",
                "description": "The currently selected client ID"
              },
              "selected_api_id": {
                "type": "string",
                "description": "The currently selected API identifier"
              }
            },
            "required": [
              "selected_client_id",
              "selected_api_id"
            ],
            "additionalProperties": false
          },
          "profile": {
            "type": "object",
            "description": "User profile information",
            "additionalProperties": true
          }
        },
        "required": [
          "is_authenticated",
          "account",
          "connection_name",
          "api_identifier",
          "manage_url",
          "user_resources",
          "profile"
        ],
        "additionalProperties": false
      },
      "update-user-session-data": {
        "type": "object",
        "description": "Schema for updating user session data",
        "properties": {
          "selected_client_id": {
            "type": "string",
            "description": "The currently selected client ID"
          },
          "selected_api_id": {
            "type": "string",
            "description": "The currently selected API identifier"
          }
        },
        "anyOf": [
          {
            "required": [
              "selected_client_id"
            ]
          },
          {
            "required": [
              "selected_api_id"
            ]
          }
        ],
        "additionalProperties": false
      }
    },
    "responses": {
      "get-health-alive": {
        "description": "Health check alive report.",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/health-check-alive-report"
            }
          }
        }
      },
      "internal-server-error": {
        "description": "Internal Server Error",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "format": "uri",
                  "example": "https://docs.auth0.com/errors/internal-server-error"
                },
                "title": {
                  "type": "string",
                  "example": "Internal Server Error"
                },
                "status": {
                  "type": "integer",
                  "example": 500
                },
                "detail": {
                  "type": "string",
                  "example": "An unexpected error occurred"
                },
                "instance": {
                  "type": "string",
                  "format": "uri",
                  "example": "https://api.example.com/docs/backend/"
                }
              },
              "required": [
                "type",
                "title",
                "status",
                "detail"
              ]
            }
          }
        }
      },
      "get-health-ready": {
        "description": "Health check ready report.",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/health-check-ready-report"
            }
          }
        }
      },
      "unauthenticated": {
        "description": "Unauthenticated - Authentication required",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "format": "uri",
                  "example": "https://docs.auth0.com/errors/unauthenticated"
                },
                "title": {
                  "type": "string",
                  "example": "Unauthenticated"
                },
                "status": {
                  "type": "integer",
                  "example": 401
                },
                "detail": {
                  "type": "string",
                  "example": "Authentication is required to access this resource."
                }
              },
              "required": [
                "type",
                "title",
                "status",
                "detail"
              ],
              "additionalProperties": false
            }
          }
        }
      },
      "not-found": {
        "description": "Not Found",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "format": "uri",
                  "example": "https://docs.auth0.com/errors/not-found"
                },
                "title": {
                  "type": "string",
                  "example": "Not Found"
                },
                "status": {
                  "type": "integer",
                  "example": 404
                },
                "detail": {
                  "type": "string",
                  "example": "The requested resource was not found"
                }
              },
              "required": [
                "type",
                "title",
                "status",
                "detail"
              ],
              "additionalProperties": false
            }
          }
        }
      },
      "bad-request": {
        "description": "Bad Request",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "format": "uri",
                  "example": "https://docs.auth0.com/errors/bad-request"
                },
                "title": {
                  "type": "string",
                  "example": "Bad Request"
                },
                "status": {
                  "type": "integer",
                  "example": 400
                },
                "detail": {
                  "type": "string",
                  "example": "Invalid request body"
                }
              },
              "required": [
                "type",
                "title",
                "status",
                "detail"
              ],
              "additionalProperties": false
            }
          }
        }
      },
      "insufficient-scope": {
        "description": "Insufficient Scope",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "format": "uri",
                  "example": "https://docs.auth0.com/errors/insufficient-scope"
                },
                "title": {
                  "type": "string",
                  "example": "Insufficient Scope"
                },
                "status": {
                  "type": "integer",
                  "example": 403
                },
                "detail": {
                  "type": "string",
                  "example": "Insufficient scope - user is not allowed to perform this operation"
                }
              },
              "required": [
                "title",
                "status",
                "detail"
              ],
              "additionalProperties": false
            }
          }
        }
      },
      "conflict": {
        "description": "Conflict",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "format": "uri",
                  "example": "https://docs.auth0.com/errors/conflict"
                },
                "title": {
                  "type": "string",
                  "example": "Conflict"
                },
                "status": {
                  "type": "integer",
                  "example": 409
                },
                "detail": {
                  "type": "string",
                  "example": "Another item exists with the same alias."
                }
              },
              "required": [
                "title",
                "status",
                "detail"
              ],
              "additionalProperties": false
            }
          }
        }
      },
      "too-many-requests": {
        "description": "Too Many Requests",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "format": "uri",
                  "example": "https://docs.auth0.com/errors/too-many-requests"
                },
                "title": {
                  "type": "string",
                  "example": "Too Many Requests"
                },
                "status": {
                  "type": "integer",
                  "example": 429
                },
                "detail": {
                  "type": "string",
                  "example": "Too many requests. Check the X-RateLimit-Limit, X-RateLimit-Remaining and X-RateLimit-Reset headers."
                }
              },
              "required": [
                "title",
                "status",
                "detail"
              ],
              "additionalProperties": false
            }
          }
        }
      }
    }
  }
}